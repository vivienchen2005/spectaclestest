- !<NativePackageDescriptor/7aa1f971-a4b8-4327-832d-8ecc8f9353dd>
  PackagePath: ""
  StudioVersion:
    major: 5
    minor: 6
    patch: 0
    build: 25012704
    type: Unset
  Description: "Description: Script for managing animation states and transitions in a component-based animation system.\nIt allows the creation of animation states from single clips or blend trees, defines parameters for controlling \nanimations, and sets up transitions between states based on conditions. The script includes functionality for \ndebugging and visualizing the state machine and its parameters.\n\n\napi examples :\n// You can add a parameter to control animations by calling the addParameter method with the parameter name and default value.\n\n// script.addParameter(\"speed\", 1.0);\n\n// To set the value of a parameter, use the setParameter method with the parameter name and the new value.\n// script.setParameter(\"speed\", 1.5);\n\n// Set a trigger by calling setTrigger with the trigger name.\n// script.setTrigger(\"jump\");\n\n// Reset a trigger by calling resetTrigger with the trigger name.\n// script.resetTrigger(\"jump\");\n\n// Get a state to add callbacks or query its status using getState.\n\n// let runState = script.getState(\"Run\");\n// runState.onEnter.add(function() \\{\n//     print(\"Entered Run state\");\n// \\});\n\n// Force a state change immediately or with a transition duration by calling setState.\n\n// script.setState(\"Idle\", 0); // Immediately change to Idle state\n// script.setState(\"Run\", 0.5); // Transition to Run state over 0.5 seconds\n\n\n// Define a new state from a configuration object using addStateFromConfig.\n\n// let state = \\{\n//     stateName: \"Run\",\n//     source: 0, // From Single Clip\n//     clipName: \"RunAnimationClip\"\n// \\};\n// script.addStateFromConfig(state);\n\n// Define a transition from a configuration object using addTransitionFromConfig.\n// let transition = \\{\n//     enabled: true,\n//     fromStateType: 0, // Specific state\n//     fromStateName: \"Idle\",\n//     toStateType: 0, // Specific state\n//     toStateName: \"Run\",\n//     duration: 0.5,\n//     hasExitTime: false,\n//     conditions: [\n//         \\{\n//             paramName: \"speed\",\n//             type: \"Float\",\n//             funcFloat: \"IsGreater\",\n//             valueFloat: 0.5\n//         \\}\n//     ]\n// \\};\n// script.addTransitionFromConfig(transition);"
  SvgIcon: "<svg width=\"142\" height=\"136\" viewBox=\"0 0 142 136\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect x=\"0.774902\" y=\"118.111\" width=\"117.81\" height=\"22.7587\" rx=\"8.5\" transform=\"rotate(-45 0.774902 118.111)\" fill=\"#ADFF00\"/>\n<rect x=\"63.9004\" y=\"8.03247\" width=\"85.1776\" height=\"19.2215\" rx=\"8\" transform=\"rotate(45 63.9004 8.03247)\" fill=\"#ADFF00\"/>\n<rect x=\"61.0464\" y=\"60.2436\" width=\"59.318\" height=\"22.7587\" rx=\"10\" transform=\"rotate(45 61.0464 60.2436)\" fill=\"#ADFF00\"/>\n<rect x=\"103.177\" y=\"102.756\" width=\"46.8301\" height=\"20.3636\" rx=\"10\" transform=\"rotate(135 103.177 102.756)\" fill=\"#ADFF00\"/>\n<rect x=\"142\" y=\"50.7217\" width=\"39.2567\" height=\"16.5771\" rx=\"8\" transform=\"rotate(135 142 50.7217)\" fill=\"#ADFF00\"/>\n<rect x=\"74.406\" y=\"21.2818\" width=\"38.3103\" height=\"16.5946\" rx=\"8\" transform=\"rotate(135 74.406 21.2818)\" fill=\"#ADFF00\"/>\n<circle cx=\"111.891\" cy=\"18.7425\" r=\"18.7425\" fill=\"#ADFF00\"/>\n</svg>\n"
  InternalVersion: 20
  VersionMajor: 1
  VersionMinor: 0
  VersionPatch: 0
  UpdateCheckpoint: 55
  ExportUid: 90e003d6-9ccb-47ac-934b-0e0f8a54d10e
  ComponentUid: ccb519a6-7cab-4a1f-8df2-aa355f5f5b1a
  CurrentVisibility: Locked
  MaxVisibility: Editable
  Instantiable: !<reference> a36e70df-3e7b-4dee-9510-ee7bcb2ff77c
  AssetLibraryDependencyStructure: !<AssetLibraryDependencyStructure/00000000-0000-0000-0000-000000000000>
    Name: ""
    AssetId: ""
    Hash: ""
    Version:
      major: 0
      minor: 0
      patch: 0
      build: 0